// This file is @generated by prost-build.
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RelationOp {
    #[prost(uint64, tag = "1")]
    pub owner_id: u64,
    #[prost(uint64, tag = "2")]
    pub target_id: u64,
    #[prost(string, tag = "4")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Friend {
    #[prost(uint64, tag = "1")]
    pub id: u64,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub remark: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub avatar: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub email: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub phone: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub gender: bool,
    #[prost(string, tag = "8")]
    pub line: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetFriendsRequest {
    #[prost(uint64, tag = "1")]
    pub owner_id: u64,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetFriendsRes {
    #[prost(message, repeated, tag = "1")]
    pub friends: ::prost::alloc::vec::Vec<Friend>,
    #[prost(int32, tag = "2")]
    pub code: i32,
    #[prost(string, tag = "3")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateGroupRequest {
    #[prost(uint64, tag = "1")]
    pub owner_id: u64,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub avatar: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub desc: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct JoinGroupReq {
    /// 请求添加的id
    #[prost(uint64, tag = "1")]
    pub src_id: u64,
    /// 群组id
    #[prost(uint64, tag = "2")]
    pub group_id: u64,
    /// 群主
    #[prost(uint64, tag = "3")]
    pub owner_id: u64,
    /// 描述消息
    #[prost(string, tag = "4")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct JoinGroupRes {
    /// 群组id
    #[prost(uint64, tag = "1")]
    pub group_id: u64,
    /// 要添加成员id
    #[prost(uint64, tag = "2")]
    pub target_id: u64,
    #[prost(string, tag = "3")]
    pub msg: ::prost::alloc::string::String,
    /// 群名称
    #[prost(string, tag = "4")]
    pub name: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Group {
    #[prost(uint64, tag = "1")]
    pub id: u64,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub avatar: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub desc: ::prost::alloc::string::String,
    #[prost(uint64, tag = "5")]
    pub owner_id: u64,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetGroupsReq {
    #[prost(uint64, tag = "1")]
    pub owner_id: u64,
    #[prost(string, tag = "3")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetGroupsRequest {
    #[prost(uint64, tag = "1")]
    pub owner_id: u64,
}
#[derive(PartialOrd)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetGroupsRes {
    #[prost(message, repeated, tag = "1")]
    pub groups: ::prost::alloc::vec::Vec<Group>,
    #[prost(int32, tag = "2")]
    pub code: i32,
    #[prost(string, tag = "3")]
    pub msg: ::prost::alloc::string::String,
}
